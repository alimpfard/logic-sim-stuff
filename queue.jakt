struct ReallyShitQueue<T> {
    data: [usize:T]
    first: usize
    last: usize

    function enqueue(mut this, anon value: T) throws {
        .data.set(.last++, value)
    }

    function dequeue(mut this) -> T? {
        if .first == .last {
            let none: T? = None
            return none
        }

        let result = .data.get(.first++)!
        .data.remove(key: .first - 1)

        return result
    }

    function is_empty(this) -> bool => .first == .last
}